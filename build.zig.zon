.{
    .name = "microzig",
    .version = "0.0.0",
    .dependencies = .{
        // packages within the monorepo so that others can reach them
        .build = .{ .path = "build" },
        .@"build/definitions" = .{ .path = "build/definitions" },
        .core = .{ .path = "core" },
        .@"tools/regz" = .{ .path = "tools/regz" },
        .@"tools/uf2" = .{ .path = "tools/uf2" },
        .@"bsp/nordic/nrf5x" = .{ .path = "bsp/nordic/nrf5x" },
        .@"bsp/nxp/lpc" = .{ .path = "bsp/nxp/lpc" },
        .@"bsp/microchip/atsam" = .{ .path = "bsp/microchip/atsam" },
        .@"bsp/microchip/avr" = .{ .path = "bsp/microchip/avr" },
        .@"bsp/gigadevice/gd32" = .{ .path = "bsp/gigadevice/gd32" },
        .@"bsp/stmicro/stm32" = .{ .path = "bsp/stmicro/stm32" },
        .@"bsp/espressif/esp" = .{ .path = "bsp/espressif/esp" },
        .@"bsp/raspberrypi/rp2040" = .{ .path = "bsp/raspberrypi/rp2040" },

        // examples so that we can build them all in one go
        .@"examples/nordic/nrf5x" = .{ .path = "examples/nordic/nrf5x" },
        .@"examples/nxp/lpc" = .{ .path = "examples/nxp/lpc" },
        .@"examples/microchip/atsam" = .{ .path = "examples/microchip/atsam" },
        .@"examples/microchip/avr" = .{ .path = "examples/microchip/avr" },
        .@"examples/gigadevice/gd32" = .{ .path = "examples/gigadevice/gd32" },
        .@"examples/stmicro/stm32" = .{ .path = "examples/stmicro/stm32" },
        .@"examples/espressif/esp" = .{ .path = "examples/espressif/esp" },
        .@"examples/raspberrypi/rp2040" = .{ .path = "examples/raspberrypi/rp2040" },

        // used for creating package tarballs
        .boxzer = .{
            .url = "https://github.com/mattnite/boxzer/archive/bb34035d894e8188769b172ce99b5e2c553bcf24.tar.gz",
            .hash = "12202844b4808399d7ae9f7857418012c46c73882f607cfa0ad69de19a7d556f1995",
        },
    },

    .paths = .{
        "README.md",
        "build.zig",
        "build.zig.zon",
        "LICENSE",
    },
}
